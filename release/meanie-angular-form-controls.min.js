"use strict";!function(n,e,t){e.module("FormControls.Component",["CheckBox.Component","CheckBoxes.Component","RadioButtons.Component","SelectBox.Component"]).factory("$formControls",function(){return{hasChanged:function(n){var t=n.previousValue,i=n.currentValue;return"UNINITIALIZED_VALUE"!==t&&!e.equals(t,i)}}})}(window,window.angular),function(n,e,t){e.module("CheckBox.Component",[]).component("checkBox",{template:'<label class="check-box"\n      ng-transclude\n      ng-click="$ctrl.toggle()"\n      ng-class="{checked: $ctrl.isChecked(), disabled: $ctrl.isDisabled}"\n    ></label>',require:{ngModel:"ngModel"},transclude:!0,bindings:{model:"<ngModel",onChange:"&",isInverse:"<isInverse",isDisabled:"<ngDisabled",isRequired:"<ngRequired"},controller:["$element","$formControls",function(n,e){var t=this;this.$onInit=function(){n.addClass("checkbox-wrapper"),this.ngModel.$isEmpty=function(){return t.isInverse?!!t.model:!t.model}},this.$onChanges=function(n){n.model&&(this.ngModel.$validate(),e.hasChanged(n.model)&&this.ngModel.$setDirty())},this.toggle=function(){if(!this.isDisabled){var n=!this.model;this.onChange({value:n})}},this.isChecked=function(){return this.isInverse?!this.model:!!this.model}}]})}(window,window.angular),function(n,e,t){e.module("CheckBoxes.Component",[]).component("checkBoxes",{template:'<div class="check-box-group {{$ctrl.classes}}">\n      <label class="check-box"\n        ng-repeat="option in $ctrl.options"\n        ng-click="$ctrl.toggle(option, $index)"\n        ng-class="{checked: $ctrl.isChecked(option, $index), disabled: $ctrl.isDisabled}"\n      >{{$ctrl.getLabel(option)}}</label>\n    </div>',require:{ngModel:"ngModel"},bindings:{model:"<ngModel",options:"<",onChange:"&",isDisabled:"<ngDisabled",isRequired:"<ngRequired"},controller:["$element","$attrs","$log","$formControls",function(n,t,i,l){function o(n,t){return"$index"===u?t:e.isObject(n)?u?"undefined"==typeof n[u]?(i.warn("Unknown property `"+u+"` for check box tracking"),null):n[u]:(i.warn("Missing track-by property for check boxes"),null):n}function s(n){return e.isObject(n)?c?"undefined"==typeof n[c]?(i.warn("Unknown property `"+c+"` for check box label"),""):n[c]:(i.warn("Missing label-by property for check boxes"),""):n}function r(n,t,i){if(!e.isArray(n)||0===n.length)return!1;var l=o(t,i),s=n.map(function(n){return d&&e.isObject(n)?o(n):n}),r=s.find(function(n){return n===l});return"undefined"!=typeof r}var a=this,c=t.labelBy||null,u=t.trackBy||null,d="true"===t.asObject;this.$onInit=function(){d&&"$index"===u&&(i.warn("Cannot track check boxes by index if model is an object"),d=!1),this.classes=n[0].className,n[0].className="",this.ngModel.$isEmpty=function(){return a.ngModel.$$setOptions({allowInvalid:!0}),!e.isArray(a.model)||0===a.model.length}},this.$onChanges=function(n){e.isArray(this.options)||(this.options=[]),n.model&&(this.ngModel.$validate(),l.hasChanged(n.model)&&this.ngModel.$setDirty())},this.getLabel=function(n){return s(n)},this.isChecked=function(n,e){return r(this.model,n,e)},this.toggle=function(n,t){if(!this.isDisabled){var i=[];e.isArray(this.model)&&(i=this.model.map(function(n){return n}));var l=r(i,n,t),s=d?n:o(n,t);if(l){var a=i.indexOf(s);i.splice(a,1)}else i.push(s);this.onChange({value:i})}}}]})}(window,window.angular),function(n,e,t){e.module("RadioButtons.Component",[]).component("radioButtons",{template:'<div class="radio-button-group {{$ctrl.classes}}">\n      <label class="radio-button"\n        ng-if="$ctrl.isNullable"\n        ng-click="$ctrl.select(null)"\n        ng-class="{checked: $ctrl.isSelected(null), disabled: $ctrl.isDisabled}"\n      >{{$ctrl.nullLabel}}</label>\n      <label class="radio-button"\n        ng-repeat="option in $ctrl.options"\n        ng-click="$ctrl.select(option, $index)"\n        ng-class="{checked: $ctrl.isSelected(option, $index), disabled: $ctrl.isDisabled}"\n      >{{$ctrl.getLabel(option)}}</label>\n    </div>',require:{ngModel:"ngModel"},bindings:{model:"<ngModel",options:"<",onChange:"&",isNullable:"<",nullValue:"<",nullLabel:"<",isDisabled:"<ngDisabled",isRequired:"<ngRequired"},controller:["$element","$attrs","$log","$formControls",function(n,t,i,l){function o(n,t){return null===n?c.nullValue:"$index"===d?t:e.isObject(n)?d?"undefined"==typeof n[d]?(i.warn("Unknown property `"+d+"` for radio tracking"),null):n[d]:(i.warn("Missing track-by property for radio buttons"),null):n}function s(n,e){return c.isNullable&&null===n?c.nullValue:h?n:o(n,e)}function r(n){return null===n?c.nullLabel:e.isObject(n)?u?"undefined"==typeof n[u]?(i.warn("Unknown property `"+u+"` for selectbox label"),""):n[u]:(i.warn("Missing label-by property for selectbox"),""):n}function a(n,t){if(c.isNullable&&c.model===c.nullValue&&null===n)return!0;if(null===c.model)return!1;var i=c.model,l=o(n,t);return h&&e.isObject(c.model)&&(i=o(c.model)),i===l}var c=this,u=t.labelBy||null,d=t.trackBy||null,h="true"===t.asObject;this.$onInit=function(){h&&"$index"===d&&(i.warn("Cannot track radio buttons by index if model is an object"),h=!1),this.classes=n[0].className,n[0].className="",this.ngModel.$isEmpty=function(){return c.isNullable?c.model===c.nullValue:null===c.model||"undefined"==typeof c.model}},this.$onChanges=function(n){e.isArray(this.options)||(this.options=[]),"undefined"==typeof this.nullValue&&(this.nullValue=null),"undefined"==typeof this.nullLabel&&(this.nullLabel="None"),this.isNullable&&(null!==this.model&&"undefined"!=typeof this.model||(this.model=this.nullValue)),n.model&&(this.ngModel.$validate(),l.hasChanged(n.model)&&this.ngModel.$setDirty())},this.getLabel=function(n){return r(n)},this.isSelected=function(n,e){return a(n,e)},this.select=function(n,e){if(!this.isDisabled){var t=s(n,e);this.onChange({value:t,option:n})}}}]})}(window,window.angular),function(n,e,t){e.module("SelectBox.Component",[]).component("selectBox",{template:'<div class="select-box {{$ctrl.classes}}">\n      <div class="form-control-wrapper clickable" ng-click="$ctrl.toggleOptions()">\n        <span class="form-control-spinner" ng-class="{\'show-spinner\': $ctrl.hasSpinner}">\n          <span class="caret"\n            ng-click="$ctrl.toggleOptions(); $event.stopPropagation();"\n            ng-class="{disabled: $ctrl.isDisabled}"\n            ng-if="!$ctrl.hasSpinner"\n          ></span>\n          <input readonly class="form-control" type="text"\n            ng-value="$ctrl.getSelectedLabel()"\n            ng-keydown="$ctrl.keydown($event)"\n            ng-class="{disabled: ($ctrl.isDisabled || $ctrl.hasSpinner)}">\n          <spinner ng-if="$ctrl.hasSpinner"></spinner>\n        </span>\n      </div>\n      <ul class="select-box-options" ng-show="$ctrl.isShowingOptions">\n        <li\n          ng-if="$ctrl.isNullable || !$ctrl.hasOptions()"\n          ng-class="{selected: $ctrl.isSelection(-1)}"\n          ng-mouseover="$ctrl.setSelection(-1)"\n          ng-click="$ctrl.confirmSelection(-1)"\n        >{{$ctrl.nullLabel}}</li>\n        <li\n          ng-transclude\n          ng-repeat="option in $ctrl.options"\n          ng-class="{selected: $ctrl.isSelection($index)}"\n          ng-mouseover="$ctrl.setSelection($index)"\n          ng-click="$ctrl.confirmSelection($index)"\n        >{{$ctrl.getLabel(option)}}</li>\n      </ul>\n    </div>',transclude:!0,require:{ngModel:"ngModel"},bindings:{model:"<ngModel",options:"<",onChange:"&",isNullable:"<",nullValue:"<",nullLabel:"<",isDisabled:"<ngDisabled",isRequired:"<ngRequired",hasSpinner:"<hasSpinner"},controller:["$element","$attrs","$log","$formControls","$scope","$document",function(n,t,i,l,o,s){function r(){if(g.isNullable||!(b<0)){var n=y[b+(g.isNullable?1:0)];if(n){var e=m[0].scrollTop,t=e+m[0].clientHeight,i=n.offsetTop,l=i+n.clientHeight;i<e?m[0].scrollTop-=e-i:l>t&&(m[0].scrollTop+=l-t)}}}function a(n){!$[0].contains(n.target)&&g.isShowingOptions&&o.$apply(g.hideOptions.bind(g))}function c(){var n=b;"undefined"==typeof b?g.isNullable?b=-1:g.options.length>0&&(b=g.options.length-1):b>(g.isNullable?-1:0)&&b--,n!==b&&r()}function u(){var n=b;"undefined"==typeof b?g.isNullable?b=-1:g.options.length>0&&(b=0):b<g.options.length-1&&b++,n!==b&&r()}function d(n,t){return null===n?g.nullValue:"$index"===k?t:e.isObject(n)?k?"undefined"==typeof n[k]?(i.warn("Unknown property `"+k+"` for select box tracking"),g.nullValue):n[k]:(i.warn("Missing track-by property for select box"),g.nullValue):n}function h(n,e){return g.isNullable&&null===n?g.nullValue:v?n:d(n,e)}function p(n){return null===n||"undefined"==typeof n?g.nullLabel:e.isObject(n)?w?"undefined"==typeof n[w]?(i.warn("Unknown property `"+w+"` for select box label"),""):n[w]:(i.warn("Missing label-by property for select box"),""):n}function f(n,t){if("undefined"==typeof n||n===g.nullValue)return null;if("$index"===k)return"undefined"!=typeof t[n]?t[n]:null;var i=n;return v&&e.isObject(n)&&(i=d(n)),t.find(function(n,e){var t=d(n,e);return i===t})}var g=this,b=void 0,$=void 0,m=void 0,y=void 0,w=t.labelBy||null,k=t.trackBy||null,v="true"===t.asObject,C={ENTER:13,ESC:27,SPACE:32,UP:38,DOWN:40};this.$onInit=function(){v&&"$index"===k&&(i.warn("Cannot track select box by index if model is an object"),v=!1),this.isShowingOptions=!1,this.classes=n[0].className,n[0].className="",$=n.find("input"),m=$.parent().next(),y=m.find("li"),s.on("click",a),this.ngModel.$isEmpty=function(){return g.isNullable?g.model===g.nullValue:null===g.model||"undefined"==typeof g.model}},this.$onDestroy=function(){s.off("click",a)},this.$onChanges=function(n){e.isArray(this.options)||(this.options=[]),"undefined"==typeof this.nullValue&&(this.nullValue=null),"undefined"==typeof this.nullLabel&&(this.nullLabel="..."),this.isNullable&&(null!==this.model&&"undefined"!=typeof this.model||(this.model=this.nullValue)),this.isDisabled&&(this.isShowingOptions=!1);var t=f(this.model,this.options);b=this.options.indexOf(t),n.model&&(this.ngModel.$validate(),l.hasChanged(n.model)&&this.ngModel.$setDirty())},this.keydown=function(n){this.isShowingOptions&&(n.keyCode===C.UP?(n.preventDefault(),c()):n.keyCode===C.DOWN?(n.preventDefault(),u()):n.keyCode===C.ESC&&(n.preventDefault(),this.hideOptions())),n.keyCode!==C.ENTER&&n.keyCode!==C.SPACE||(n.preventDefault(),this.isShowingOptions?this.confirmSelection():this.showOptions())},this.getSelectedLabel=function(){var n=f(this.model,this.options);return p(n)},this.getLabel=function(n){return p(n)},this.showOptions=function(){this.isDisabled||this.hasSpinner||(this.isShowingOptions=!0)},this.hideOptions=function(){this.isShowingOptions=!1},this.toggleOptions=function(){this.isShowingOptions?this.hideOptions():this.showOptions()},this.hasOptions=function(){return this.options.length>0},this.select=function(n,e){if(!this.isDisabled){this.hideOptions();var t=h(n,e);this.onChange({value:t,option:n})}},this.setSelection=function(n){b=n},this.isSelection=function(n){return b===n},this.confirmSelection=function(n){"undefined"==typeof n&&(n=b);var e=void 0;if(this.isNullable&&n===-1)e=null;else{if(!this.hasOptions()||"undefined"==typeof n||"undefined"==typeof this.options[n])return;e=this.options[n]}this.select(e,n)}}]})}(window,window.angular);
//# sourceMappingURL=meanie-angular-form-controls.min.js.map
